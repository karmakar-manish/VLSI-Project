// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _k2c_affine_matmul_HH_
#define _k2c_affine_matmul_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "check_best_model_cud.h"
#include "check_best_model_dEe.h"
#include "check_best_model_kbM.h"

namespace ap_rtl {

struct k2c_affine_matmul : public sc_module {
    // Port declarations 23
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<12> > C_address0;
    sc_out< sc_logic > C_ce0;
    sc_out< sc_logic > C_we0;
    sc_out< sc_lv<32> > C_d0;
    sc_in< sc_lv<32> > C_q0;
    sc_out< sc_lv<12> > A_address0;
    sc_out< sc_logic > A_ce0;
    sc_in< sc_lv<32> > A_q0;
    sc_out< sc_lv<12> > B_address0;
    sc_out< sc_logic > B_ce0;
    sc_in< sc_lv<32> > B_q0;
    sc_out< sc_lv<12> > d_address0;
    sc_out< sc_logic > d_ce0;
    sc_in< sc_lv<32> > d_q0;
    sc_in< sc_lv<64> > outrows;
    sc_in< sc_lv<8> > outcols;
    sc_in< sc_lv<8> > innerdim;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    k2c_affine_matmul(sc_module_name name);
    SC_HAS_PROCESS(k2c_affine_matmul);

    ~k2c_affine_matmul();

    sc_trace_file* mVcdFile;

    check_best_model_cud<1,5,32,32,32>* check_best_model_cud_U37;
    check_best_model_dEe<1,4,32,32,32>* check_best_model_dEe_U38;
    check_best_model_kbM<1,1,8,13,13>* check_best_model_kbM_U39;
    check_best_model_kbM<1,1,8,13,13>* check_best_model_kbM_U40;
    check_best_model_kbM<1,1,8,13,13>* check_best_model_kbM_U41;
    sc_signal< sc_lv<24> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > reg_190;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_logic > ap_CS_fsm_state18;
    sc_signal< sc_lv<32> > grp_fu_182_p2;
    sc_signal< sc_lv<32> > reg_195;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_logic > ap_CS_fsm_state23;
    sc_signal< sc_lv<13> > outcols_cast8_fu_200_p1;
    sc_signal< sc_lv<13> > outcols_cast8_reg_384;
    sc_signal< sc_lv<64> > row_2_fu_213_p2;
    sc_signal< sc_lv<64> > row_2_reg_393;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<13> > tmp_fu_350_p2;
    sc_signal< sc_lv<13> > tmp_reg_398;
    sc_signal< sc_lv<1> > exitcond4_fu_208_p2;
    sc_signal< sc_lv<13> > innerdim_cast_fu_219_p1;
    sc_signal< sc_lv<13> > innerdim_cast_reg_403;
    sc_signal< sc_lv<12> > tmp_4_fu_222_p1;
    sc_signal< sc_lv<12> > tmp_4_reg_408;
    sc_signal< sc_lv<7> > col_2_fu_238_p2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<64> > i_19_fu_263_p2;
    sc_signal< sc_lv<64> > i_19_reg_424;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<13> > outrowidx_fu_355_p2;
    sc_signal< sc_lv<13> > outrowidx_reg_429;
    sc_signal< sc_lv<1> > exitcond2_fu_258_p2;
    sc_signal< sc_lv<13> > inneridx_fu_360_p2;
    sc_signal< sc_lv<13> > inneridx_reg_434;
    sc_signal< sc_lv<12> > j_cast4_fu_269_p1;
    sc_signal< sc_lv<12> > j_cast4_reg_439;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<64> > j_cast2_fu_277_p1;
    sc_signal< sc_lv<64> > j_cast2_reg_444;
    sc_signal< sc_lv<7> > j_7_fu_290_p2;
    sc_signal< sc_lv<7> > j_7_reg_452;
    sc_signal< sc_lv<12> > C_addr_2_reg_457;
    sc_signal< sc_lv<1> > exitcond1_fu_285_p2;
    sc_signal< sc_lv<7> > k_2_fu_319_p2;
    sc_signal< sc_lv<7> > k_2_reg_465;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<1> > exitcond_fu_314_p2;
    sc_signal< sc_lv<12> > next_mul_fu_335_p2;
    sc_signal< sc_lv<12> > next_mul_reg_475;
    sc_signal< sc_lv<32> > A_load_reg_490;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<32> > B_load_reg_495;
    sc_signal< sc_lv<32> > grp_fu_186_p2;
    sc_signal< sc_lv<32> > tmp_5_reg_500;
    sc_signal< sc_lv<32> > d_load_reg_505;
    sc_signal< sc_lv<64> > row_reg_116;
    sc_signal< sc_lv<1> > exitcond3_fu_233_p2;
    sc_signal< sc_lv<7> > col_reg_127;
    sc_signal< sc_lv<64> > i_reg_138;
    sc_signal< sc_lv<7> > j_reg_149;
    sc_signal< sc_logic > ap_CS_fsm_state24;
    sc_signal< sc_lv<7> > k_reg_160;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_lv<12> > phi_mul_reg_171;
    sc_signal< sc_lv<64> > sum_cast_fu_249_p1;
    sc_signal< sc_lv<64> > sum2_cast_fu_301_p1;
    sc_signal< sc_lv<64> > sum5_cast_fu_330_p1;
    sc_signal< sc_lv<64> > sum8_cast_fu_345_p1;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<32> > grp_fu_182_p1;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_logic > ap_CS_fsm_state19;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<8> > col_cast_fu_229_p1;
    sc_signal< sc_lv<13> > col_cast5_fu_225_p1;
    sc_signal< sc_lv<13> > sum_fu_244_p2;
    sc_signal< sc_lv<8> > j_cast_fu_281_p1;
    sc_signal< sc_lv<13> > j_cast3_fu_273_p1;
    sc_signal< sc_lv<13> > sum2_fu_296_p2;
    sc_signal< sc_lv<8> > k_cast_fu_310_p1;
    sc_signal< sc_lv<13> > k_cast1_fu_306_p1;
    sc_signal< sc_lv<13> > sum5_fu_325_p2;
    sc_signal< sc_lv<12> > sum8_fu_340_p2;
    sc_signal< sc_lv<8> > tmp_fu_350_p0;
    sc_signal< sc_lv<13> > tmp_fu_350_p1;
    sc_signal< sc_lv<8> > outrowidx_fu_355_p0;
    sc_signal< sc_lv<13> > tmp_29_fu_254_p1;
    sc_signal< sc_lv<8> > inneridx_fu_360_p0;
    sc_signal< sc_lv<24> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<24> ap_ST_fsm_state1;
    static const sc_lv<24> ap_ST_fsm_state2;
    static const sc_lv<24> ap_ST_fsm_state3;
    static const sc_lv<24> ap_ST_fsm_state4;
    static const sc_lv<24> ap_ST_fsm_state5;
    static const sc_lv<24> ap_ST_fsm_state6;
    static const sc_lv<24> ap_ST_fsm_state7;
    static const sc_lv<24> ap_ST_fsm_state8;
    static const sc_lv<24> ap_ST_fsm_state9;
    static const sc_lv<24> ap_ST_fsm_state10;
    static const sc_lv<24> ap_ST_fsm_state11;
    static const sc_lv<24> ap_ST_fsm_state12;
    static const sc_lv<24> ap_ST_fsm_state13;
    static const sc_lv<24> ap_ST_fsm_state14;
    static const sc_lv<24> ap_ST_fsm_state15;
    static const sc_lv<24> ap_ST_fsm_state16;
    static const sc_lv<24> ap_ST_fsm_state17;
    static const sc_lv<24> ap_ST_fsm_state18;
    static const sc_lv<24> ap_ST_fsm_state19;
    static const sc_lv<24> ap_ST_fsm_state20;
    static const sc_lv<24> ap_ST_fsm_state21;
    static const sc_lv<24> ap_ST_fsm_state22;
    static const sc_lv<24> ap_ST_fsm_state23;
    static const sc_lv<24> ap_ST_fsm_state24;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_16;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<12> ap_const_lv12_0;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<7> ap_const_lv7_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_A_address0();
    void thread_A_ce0();
    void thread_B_address0();
    void thread_B_ce0();
    void thread_C_address0();
    void thread_C_ce0();
    void thread_C_d0();
    void thread_C_we0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state18();
    void thread_ap_CS_fsm_state19();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state23();
    void thread_ap_CS_fsm_state24();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_col_2_fu_238_p2();
    void thread_col_cast5_fu_225_p1();
    void thread_col_cast_fu_229_p1();
    void thread_d_address0();
    void thread_d_ce0();
    void thread_exitcond1_fu_285_p2();
    void thread_exitcond2_fu_258_p2();
    void thread_exitcond3_fu_233_p2();
    void thread_exitcond4_fu_208_p2();
    void thread_exitcond_fu_314_p2();
    void thread_grp_fu_182_p1();
    void thread_i_19_fu_263_p2();
    void thread_innerdim_cast_fu_219_p1();
    void thread_inneridx_fu_360_p0();
    void thread_j_7_fu_290_p2();
    void thread_j_cast2_fu_277_p1();
    void thread_j_cast3_fu_273_p1();
    void thread_j_cast4_fu_269_p1();
    void thread_j_cast_fu_281_p1();
    void thread_k_2_fu_319_p2();
    void thread_k_cast1_fu_306_p1();
    void thread_k_cast_fu_310_p1();
    void thread_next_mul_fu_335_p2();
    void thread_outcols_cast8_fu_200_p1();
    void thread_outrowidx_fu_355_p0();
    void thread_row_2_fu_213_p2();
    void thread_sum2_cast_fu_301_p1();
    void thread_sum2_fu_296_p2();
    void thread_sum5_cast_fu_330_p1();
    void thread_sum5_fu_325_p2();
    void thread_sum8_cast_fu_345_p1();
    void thread_sum8_fu_340_p2();
    void thread_sum_cast_fu_249_p1();
    void thread_sum_fu_244_p2();
    void thread_tmp_29_fu_254_p1();
    void thread_tmp_4_fu_222_p1();
    void thread_tmp_fu_350_p0();
    void thread_tmp_fu_350_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
