// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module k2c_dot (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        C_array_address0,
        C_array_ce0,
        C_array_we0,
        C_array_d0,
        C_array_q0,
        A_array_address0,
        A_array_ce0,
        A_array_q0,
        A_ndim_read,
        A_numel_read,
        A_shape_address0,
        A_shape_ce0,
        A_shape_q0,
        B_array_address0,
        B_array_ce0,
        B_array_q0,
        axesA_0_read,
        fwork_address0,
        fwork_ce0,
        fwork_we0,
        fwork_d0,
        fwork_q0,
        fwork_address1,
        fwork_ce1,
        fwork_q1
);

parameter    ap_ST_fsm_state1 = 231'd1;
parameter    ap_ST_fsm_state2 = 231'd2;
parameter    ap_ST_fsm_state3 = 231'd4;
parameter    ap_ST_fsm_state4 = 231'd8;
parameter    ap_ST_fsm_state5 = 231'd16;
parameter    ap_ST_fsm_state6 = 231'd32;
parameter    ap_ST_fsm_state7 = 231'd64;
parameter    ap_ST_fsm_state8 = 231'd128;
parameter    ap_ST_fsm_state9 = 231'd256;
parameter    ap_ST_fsm_state10 = 231'd512;
parameter    ap_ST_fsm_state11 = 231'd1024;
parameter    ap_ST_fsm_state12 = 231'd2048;
parameter    ap_ST_fsm_state13 = 231'd4096;
parameter    ap_ST_fsm_state14 = 231'd8192;
parameter    ap_ST_fsm_state15 = 231'd16384;
parameter    ap_ST_fsm_state16 = 231'd32768;
parameter    ap_ST_fsm_state17 = 231'd65536;
parameter    ap_ST_fsm_state18 = 231'd131072;
parameter    ap_ST_fsm_state19 = 231'd262144;
parameter    ap_ST_fsm_state20 = 231'd524288;
parameter    ap_ST_fsm_state21 = 231'd1048576;
parameter    ap_ST_fsm_state22 = 231'd2097152;
parameter    ap_ST_fsm_state23 = 231'd4194304;
parameter    ap_ST_fsm_state24 = 231'd8388608;
parameter    ap_ST_fsm_state25 = 231'd16777216;
parameter    ap_ST_fsm_state26 = 231'd33554432;
parameter    ap_ST_fsm_state27 = 231'd67108864;
parameter    ap_ST_fsm_state28 = 231'd134217728;
parameter    ap_ST_fsm_state29 = 231'd268435456;
parameter    ap_ST_fsm_state30 = 231'd536870912;
parameter    ap_ST_fsm_state31 = 231'd1073741824;
parameter    ap_ST_fsm_state32 = 231'd2147483648;
parameter    ap_ST_fsm_state33 = 231'd4294967296;
parameter    ap_ST_fsm_state34 = 231'd8589934592;
parameter    ap_ST_fsm_state35 = 231'd17179869184;
parameter    ap_ST_fsm_state36 = 231'd34359738368;
parameter    ap_ST_fsm_state37 = 231'd68719476736;
parameter    ap_ST_fsm_state38 = 231'd137438953472;
parameter    ap_ST_fsm_state39 = 231'd274877906944;
parameter    ap_ST_fsm_state40 = 231'd549755813888;
parameter    ap_ST_fsm_state41 = 231'd1099511627776;
parameter    ap_ST_fsm_state42 = 231'd2199023255552;
parameter    ap_ST_fsm_state43 = 231'd4398046511104;
parameter    ap_ST_fsm_state44 = 231'd8796093022208;
parameter    ap_ST_fsm_state45 = 231'd17592186044416;
parameter    ap_ST_fsm_state46 = 231'd35184372088832;
parameter    ap_ST_fsm_state47 = 231'd70368744177664;
parameter    ap_ST_fsm_state48 = 231'd140737488355328;
parameter    ap_ST_fsm_state49 = 231'd281474976710656;
parameter    ap_ST_fsm_state50 = 231'd562949953421312;
parameter    ap_ST_fsm_state51 = 231'd1125899906842624;
parameter    ap_ST_fsm_state52 = 231'd2251799813685248;
parameter    ap_ST_fsm_state53 = 231'd4503599627370496;
parameter    ap_ST_fsm_state54 = 231'd9007199254740992;
parameter    ap_ST_fsm_state55 = 231'd18014398509481984;
parameter    ap_ST_fsm_state56 = 231'd36028797018963968;
parameter    ap_ST_fsm_state57 = 231'd72057594037927936;
parameter    ap_ST_fsm_state58 = 231'd144115188075855872;
parameter    ap_ST_fsm_state59 = 231'd288230376151711744;
parameter    ap_ST_fsm_state60 = 231'd576460752303423488;
parameter    ap_ST_fsm_state61 = 231'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 231'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 231'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 231'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 231'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 231'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 231'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 231'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 231'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 231'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 231'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 231'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 231'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 231'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 231'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 231'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 231'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 231'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 231'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 231'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 231'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 231'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 231'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 231'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 231'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 231'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 231'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 231'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 231'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 231'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 231'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 231'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 231'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 231'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 231'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 231'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 231'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 231'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 231'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 231'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 231'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 231'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 231'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 231'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 231'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 231'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 231'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 231'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 231'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 231'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 231'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 231'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 231'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 231'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 231'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 231'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 231'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 231'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state119 = 231'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state120 = 231'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state121 = 231'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state122 = 231'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state123 = 231'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state124 = 231'd10633823966279326983230456482242756608;
parameter    ap_ST_fsm_state125 = 231'd21267647932558653966460912964485513216;
parameter    ap_ST_fsm_state126 = 231'd42535295865117307932921825928971026432;
parameter    ap_ST_fsm_state127 = 231'd85070591730234615865843651857942052864;
parameter    ap_ST_fsm_state128 = 231'd170141183460469231731687303715884105728;
parameter    ap_ST_fsm_state129 = 231'd340282366920938463463374607431768211456;
parameter    ap_ST_fsm_state130 = 231'd680564733841876926926749214863536422912;
parameter    ap_ST_fsm_state131 = 231'd1361129467683753853853498429727072845824;
parameter    ap_ST_fsm_state132 = 231'd2722258935367507707706996859454145691648;
parameter    ap_ST_fsm_state133 = 231'd5444517870735015415413993718908291383296;
parameter    ap_ST_fsm_state134 = 231'd10889035741470030830827987437816582766592;
parameter    ap_ST_fsm_state135 = 231'd21778071482940061661655974875633165533184;
parameter    ap_ST_fsm_state136 = 231'd43556142965880123323311949751266331066368;
parameter    ap_ST_fsm_state137 = 231'd87112285931760246646623899502532662132736;
parameter    ap_ST_fsm_state138 = 231'd174224571863520493293247799005065324265472;
parameter    ap_ST_fsm_state139 = 231'd348449143727040986586495598010130648530944;
parameter    ap_ST_fsm_state140 = 231'd696898287454081973172991196020261297061888;
parameter    ap_ST_fsm_state141 = 231'd1393796574908163946345982392040522594123776;
parameter    ap_ST_fsm_state142 = 231'd2787593149816327892691964784081045188247552;
parameter    ap_ST_fsm_state143 = 231'd5575186299632655785383929568162090376495104;
parameter    ap_ST_fsm_state144 = 231'd11150372599265311570767859136324180752990208;
parameter    ap_ST_fsm_state145 = 231'd22300745198530623141535718272648361505980416;
parameter    ap_ST_fsm_state146 = 231'd44601490397061246283071436545296723011960832;
parameter    ap_ST_fsm_state147 = 231'd89202980794122492566142873090593446023921664;
parameter    ap_ST_fsm_state148 = 231'd178405961588244985132285746181186892047843328;
parameter    ap_ST_fsm_state149 = 231'd356811923176489970264571492362373784095686656;
parameter    ap_ST_fsm_state150 = 231'd713623846352979940529142984724747568191373312;
parameter    ap_ST_fsm_state151 = 231'd1427247692705959881058285969449495136382746624;
parameter    ap_ST_fsm_state152 = 231'd2854495385411919762116571938898990272765493248;
parameter    ap_ST_fsm_state153 = 231'd5708990770823839524233143877797980545530986496;
parameter    ap_ST_fsm_state154 = 231'd11417981541647679048466287755595961091061972992;
parameter    ap_ST_fsm_state155 = 231'd22835963083295358096932575511191922182123945984;
parameter    ap_ST_fsm_state156 = 231'd45671926166590716193865151022383844364247891968;
parameter    ap_ST_fsm_state157 = 231'd91343852333181432387730302044767688728495783936;
parameter    ap_ST_fsm_state158 = 231'd182687704666362864775460604089535377456991567872;
parameter    ap_ST_fsm_state159 = 231'd365375409332725729550921208179070754913983135744;
parameter    ap_ST_fsm_state160 = 231'd730750818665451459101842416358141509827966271488;
parameter    ap_ST_fsm_state161 = 231'd1461501637330902918203684832716283019655932542976;
parameter    ap_ST_fsm_state162 = 231'd2923003274661805836407369665432566039311865085952;
parameter    ap_ST_fsm_state163 = 231'd5846006549323611672814739330865132078623730171904;
parameter    ap_ST_fsm_state164 = 231'd11692013098647223345629478661730264157247460343808;
parameter    ap_ST_fsm_state165 = 231'd23384026197294446691258957323460528314494920687616;
parameter    ap_ST_fsm_state166 = 231'd46768052394588893382517914646921056628989841375232;
parameter    ap_ST_fsm_state167 = 231'd93536104789177786765035829293842113257979682750464;
parameter    ap_ST_fsm_state168 = 231'd187072209578355573530071658587684226515959365500928;
parameter    ap_ST_fsm_state169 = 231'd374144419156711147060143317175368453031918731001856;
parameter    ap_ST_fsm_state170 = 231'd748288838313422294120286634350736906063837462003712;
parameter    ap_ST_fsm_state171 = 231'd1496577676626844588240573268701473812127674924007424;
parameter    ap_ST_fsm_state172 = 231'd2993155353253689176481146537402947624255349848014848;
parameter    ap_ST_fsm_state173 = 231'd5986310706507378352962293074805895248510699696029696;
parameter    ap_ST_fsm_state174 = 231'd11972621413014756705924586149611790497021399392059392;
parameter    ap_ST_fsm_state175 = 231'd23945242826029513411849172299223580994042798784118784;
parameter    ap_ST_fsm_state176 = 231'd47890485652059026823698344598447161988085597568237568;
parameter    ap_ST_fsm_state177 = 231'd95780971304118053647396689196894323976171195136475136;
parameter    ap_ST_fsm_state178 = 231'd191561942608236107294793378393788647952342390272950272;
parameter    ap_ST_fsm_state179 = 231'd383123885216472214589586756787577295904684780545900544;
parameter    ap_ST_fsm_state180 = 231'd766247770432944429179173513575154591809369561091801088;
parameter    ap_ST_fsm_state181 = 231'd1532495540865888858358347027150309183618739122183602176;
parameter    ap_ST_fsm_state182 = 231'd3064991081731777716716694054300618367237478244367204352;
parameter    ap_ST_fsm_state183 = 231'd6129982163463555433433388108601236734474956488734408704;
parameter    ap_ST_fsm_state184 = 231'd12259964326927110866866776217202473468949912977468817408;
parameter    ap_ST_fsm_state185 = 231'd24519928653854221733733552434404946937899825954937634816;
parameter    ap_ST_fsm_state186 = 231'd49039857307708443467467104868809893875799651909875269632;
parameter    ap_ST_fsm_state187 = 231'd98079714615416886934934209737619787751599303819750539264;
parameter    ap_ST_fsm_state188 = 231'd196159429230833773869868419475239575503198607639501078528;
parameter    ap_ST_fsm_state189 = 231'd392318858461667547739736838950479151006397215279002157056;
parameter    ap_ST_fsm_state190 = 231'd784637716923335095479473677900958302012794430558004314112;
parameter    ap_ST_fsm_state191 = 231'd1569275433846670190958947355801916604025588861116008628224;
parameter    ap_ST_fsm_state192 = 231'd3138550867693340381917894711603833208051177722232017256448;
parameter    ap_ST_fsm_state193 = 231'd6277101735386680763835789423207666416102355444464034512896;
parameter    ap_ST_fsm_state194 = 231'd12554203470773361527671578846415332832204710888928069025792;
parameter    ap_ST_fsm_state195 = 231'd25108406941546723055343157692830665664409421777856138051584;
parameter    ap_ST_fsm_state196 = 231'd50216813883093446110686315385661331328818843555712276103168;
parameter    ap_ST_fsm_state197 = 231'd100433627766186892221372630771322662657637687111424552206336;
parameter    ap_ST_fsm_state198 = 231'd200867255532373784442745261542645325315275374222849104412672;
parameter    ap_ST_fsm_state199 = 231'd401734511064747568885490523085290650630550748445698208825344;
parameter    ap_ST_fsm_state200 = 231'd803469022129495137770981046170581301261101496891396417650688;
parameter    ap_ST_fsm_state201 = 231'd1606938044258990275541962092341162602522202993782792835301376;
parameter    ap_ST_fsm_state202 = 231'd3213876088517980551083924184682325205044405987565585670602752;
parameter    ap_ST_fsm_state203 = 231'd6427752177035961102167848369364650410088811975131171341205504;
parameter    ap_ST_fsm_state204 = 231'd12855504354071922204335696738729300820177623950262342682411008;
parameter    ap_ST_fsm_state205 = 231'd25711008708143844408671393477458601640355247900524685364822016;
parameter    ap_ST_fsm_state206 = 231'd51422017416287688817342786954917203280710495801049370729644032;
parameter    ap_ST_fsm_state207 = 231'd102844034832575377634685573909834406561420991602098741459288064;
parameter    ap_ST_fsm_state208 = 231'd205688069665150755269371147819668813122841983204197482918576128;
parameter    ap_ST_fsm_state209 = 231'd411376139330301510538742295639337626245683966408394965837152256;
parameter    ap_ST_fsm_state210 = 231'd822752278660603021077484591278675252491367932816789931674304512;
parameter    ap_ST_fsm_state211 = 231'd1645504557321206042154969182557350504982735865633579863348609024;
parameter    ap_ST_fsm_state212 = 231'd3291009114642412084309938365114701009965471731267159726697218048;
parameter    ap_ST_fsm_state213 = 231'd6582018229284824168619876730229402019930943462534319453394436096;
parameter    ap_ST_fsm_state214 = 231'd13164036458569648337239753460458804039861886925068638906788872192;
parameter    ap_ST_fsm_state215 = 231'd26328072917139296674479506920917608079723773850137277813577744384;
parameter    ap_ST_fsm_state216 = 231'd52656145834278593348959013841835216159447547700274555627155488768;
parameter    ap_ST_fsm_state217 = 231'd105312291668557186697918027683670432318895095400549111254310977536;
parameter    ap_ST_fsm_state218 = 231'd210624583337114373395836055367340864637790190801098222508621955072;
parameter    ap_ST_fsm_state219 = 231'd421249166674228746791672110734681729275580381602196445017243910144;
parameter    ap_ST_fsm_state220 = 231'd842498333348457493583344221469363458551160763204392890034487820288;
parameter    ap_ST_fsm_state221 = 231'd1684996666696914987166688442938726917102321526408785780068975640576;
parameter    ap_ST_fsm_state222 = 231'd3369993333393829974333376885877453834204643052817571560137951281152;
parameter    ap_ST_fsm_state223 = 231'd6739986666787659948666753771754907668409286105635143120275902562304;
parameter    ap_ST_fsm_state224 = 231'd13479973333575319897333507543509815336818572211270286240551805124608;
parameter    ap_ST_fsm_state225 = 231'd26959946667150639794667015087019630673637144422540572481103610249216;
parameter    ap_ST_fsm_state226 = 231'd53919893334301279589334030174039261347274288845081144962207220498432;
parameter    ap_ST_fsm_state227 = 231'd107839786668602559178668060348078522694548577690162289924414440996864;
parameter    ap_ST_fsm_state228 = 231'd215679573337205118357336120696157045389097155380324579848828881993728;
parameter    ap_ST_fsm_state229 = 231'd431359146674410236714672241392314090778194310760649159697657763987456;
parameter    ap_ST_fsm_state230 = 231'd862718293348820473429344482784628181556388621521298319395315527974912;
parameter    ap_ST_fsm_state231 = 231'd1725436586697640946858688965569256363112777243042596638790631055949824;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] C_array_address0;
output   C_array_ce0;
output   C_array_we0;
output  [31:0] C_array_d0;
input  [31:0] C_array_q0;
output  [11:0] A_array_address0;
output   A_array_ce0;
input  [31:0] A_array_q0;
input  [63:0] A_ndim_read;
input  [63:0] A_numel_read;
output  [2:0] A_shape_address0;
output   A_shape_ce0;
input  [63:0] A_shape_q0;
output  [11:0] B_array_address0;
output   B_array_ce0;
input  [31:0] B_array_q0;
input  [63:0] axesA_0_read;
output  [10:0] fwork_address0;
output   fwork_ce0;
output   fwork_we0;
output  [31:0] fwork_d0;
input  [31:0] fwork_q0;
output  [10:0] fwork_address1;
output   fwork_ce1;
input  [31:0] fwork_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg A_array_ce0;
reg[2:0] A_shape_address0;
reg A_shape_ce0;
reg B_array_ce0;
reg[10:0] fwork_address0;
reg fwork_ce0;
reg fwork_we0;
reg[31:0] fwork_d0;
reg fwork_ce1;

(* fsm_encoding = "none" *) reg   [230:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [2:0] fc1_kernel_shape_address0;
reg    fc1_kernel_shape_ce0;
wire   [6:0] fc1_kernel_shape_q0;
wire   [63:0] i_3_fu_621_p2;
wire    ap_CS_fsm_state2;
wire   [1:0] i_10_fu_658_p2;
wire    ap_CS_fsm_state3;
wire   [0:0] exitcond1_fu_652_p2;
reg   [63:0] A_shape_load_reg_1031;
wire    ap_CS_fsm_state4;
wire   [63:0] grp_fu_685_p2;
reg   [63:0] free_axesA_reg_1037;
wire    ap_CS_fsm_state71;
wire   [63:0] i_2_fu_693_p2;
reg   [63:0] i_2_reg_1042;
wire   [2:0] i_2_cast_fu_698_p2;
reg   [2:0] i_2_cast_reg_1047;
wire   [63:0] i_4_cast_fu_704_p1;
reg   [63:0] i_4_cast_reg_1052;
wire    ap_CS_fsm_state72;
wire   [2:0] i_6_fu_714_p2;
reg   [2:0] i_6_reg_1060;
wire   [0:0] exitcond6_fu_709_p2;
wire   [2:0] i_11_fu_730_p2;
wire    ap_CS_fsm_state74;
wire   [0:0] tmp_s_fu_725_p2;
wire   [63:0] i_7_cast4_fu_736_p1;
reg   [63:0] i_7_cast4_reg_1078;
wire    ap_CS_fsm_state75;
wire   [0:0] exitcond5_fu_740_p2;
wire   [1:0] i_12_fu_751_p2;
reg   [1:0] i_12_reg_1091;
wire   [0:0] j_fu_757_p2;
reg   [0:0] j_reg_1096;
wire   [63:0] i_8_cast_fu_763_p1;
reg   [63:0] i_8_cast_reg_1101;
wire    ap_CS_fsm_state77;
wire   [2:0] i_13_fu_773_p2;
reg   [2:0] i_13_reg_1109;
wire   [0:0] exitcond2_fu_768_p2;
wire    ap_CS_fsm_state78;
wire   [63:0] i_9_cast3_fu_779_p1;
reg   [63:0] i_9_cast3_reg_1124;
wire    ap_CS_fsm_state80;
wire   [1:0] i_14_fu_790_p2;
reg   [1:0] i_14_reg_1132;
wire   [0:0] exitcond9_fu_784_p2;
wire   [31:0] tmp_23_fu_796_p1;
reg   [31:0] tmp_23_reg_1142;
wire    ap_CS_fsm_state81;
wire   [63:0] i_18_fu_814_p2;
reg   [63:0] i_18_reg_1155;
wire    ap_CS_fsm_state83;
wire   [11:0] tmp_24_fu_820_p1;
reg   [11:0] tmp_24_reg_1160;
wire   [0:0] exitcond3_fu_809_p2;
wire   [31:0] i_15_fu_823_p2;
reg   [31:0] i_15_reg_1165;
wire    ap_CS_fsm_state84;
wire   [63:0] tmp_7_i_fu_837_p1;
reg   [63:0] tmp_7_i_reg_1173;
wire   [0:0] tmp_25_fu_829_p3;
wire    ap_CS_fsm_state85;
wire   [63:0] grp_fu_849_p2;
wire    ap_CS_fsm_state152;
wire   [63:0] j_4_cast_fu_855_p1;
reg   [63:0] j_4_cast_reg_1194;
wire    ap_CS_fsm_state153;
wire   [2:0] j_2_fu_865_p2;
reg   [2:0] j_2_reg_1202;
wire   [0:0] exitcond8_fu_860_p2;
wire    ap_CS_fsm_state154;
wire   [63:0] idx2_3_cast2_fu_871_p1;
reg   [63:0] idx2_3_cast2_reg_1222;
wire    ap_CS_fsm_state157;
wire   [10:0] i_17_fu_881_p2;
reg   [10:0] i_17_reg_1231;
wire   [63:0] tmp_7_i5_fu_899_p1;
reg   [63:0] tmp_7_i5_reg_1239;
wire    ap_CS_fsm_state158;
wire   [0:0] tmp_26_fu_891_p3;
wire   [1:0] phitmp_fu_904_p2;
reg   [1:0] phitmp_reg_1249;
wire   [63:0] B_shape_load_2_cast_fu_910_p1;
wire    ap_CS_fsm_state159;
wire   [63:0] grp_fu_921_p2;
wire    ap_CS_fsm_state226;
wire   [63:0] j_5_cast1_fu_927_p1;
reg   [63:0] j_5_cast1_reg_1265;
wire    ap_CS_fsm_state227;
wire   [1:0] j_6_fu_938_p2;
reg   [1:0] j_6_reg_1273;
wire   [0:0] exitcond7_fu_932_p2;
wire    ap_CS_fsm_state228;
reg   [2:0] permA_address0;
reg    permA_ce0;
reg    permA_we0;
reg   [63:0] permA_d0;
wire   [63:0] permA_q0;
reg   [2:0] permB_address0;
reg    permB_ce0;
reg    permB_we0;
reg   [1:0] permB_d0;
wire   [1:0] permB_q0;
reg   [2:0] freeA_address0;
reg    freeA_ce0;
reg    freeA_we0;
wire   [63:0] freeA_q0;
reg   [2:0] freeB_address0;
reg    freeB_ce0;
reg    freeB_we0;
wire   [1:0] freeB_q0;
reg   [2:0] newshpA_address0;
reg    newshpA_ce0;
reg    newshpA_we0;
wire   [63:0] newshpA_q0;
reg   [2:0] newshpB_address0;
reg    newshpB_ce0;
reg    newshpB_we0;
wire   [63:0] newshpB_d0;
wire   [63:0] newshpB_q0;
reg   [2:0] Asub_address0;
reg    Asub_ce0;
reg    Asub_we0;
reg   [63:0] Asub_d0;
wire   [63:0] Asub_q0;
reg   [2:0] Bsub_address0;
reg    Bsub_ce0;
reg    Bsub_we0;
reg   [63:0] Bsub_d0;
wire   [63:0] Bsub_q0;
wire    grp_k2c_matmul_fu_591_ap_start;
wire    grp_k2c_matmul_fu_591_ap_done;
wire    grp_k2c_matmul_fu_591_ap_idle;
wire    grp_k2c_matmul_fu_591_ap_ready;
wire   [11:0] grp_k2c_matmul_fu_591_C_address0;
wire    grp_k2c_matmul_fu_591_C_ce0;
wire    grp_k2c_matmul_fu_591_C_we0;
wire   [31:0] grp_k2c_matmul_fu_591_C_d0;
wire   [10:0] grp_k2c_matmul_fu_591_A_address0;
wire    grp_k2c_matmul_fu_591_A_ce0;
wire   [10:0] grp_k2c_matmul_fu_591_A_address1;
wire    grp_k2c_matmul_fu_591_A_ce1;
wire    grp_k2c_sub2idx_fu_602_ap_start;
wire    grp_k2c_sub2idx_fu_602_ap_done;
wire    grp_k2c_sub2idx_fu_602_ap_idle;
wire    grp_k2c_sub2idx_fu_602_ap_ready;
wire   [2:0] grp_k2c_sub2idx_fu_602_sub_address0;
wire    grp_k2c_sub2idx_fu_602_sub_ce0;
reg   [63:0] grp_k2c_sub2idx_fu_602_sub_q0;
wire   [2:0] grp_k2c_sub2idx_fu_602_shape_address0;
wire    grp_k2c_sub2idx_fu_602_shape_ce0;
reg   [63:0] grp_k2c_sub2idx_fu_602_shape_q0;
reg   [63:0] grp_k2c_sub2idx_fu_602_ndim;
wire   [63:0] grp_k2c_sub2idx_fu_602_ap_return;
reg   [63:0] i_reg_416;
wire   [0:0] exitcond_fu_616_p2;
reg   [1:0] i_1_reg_428;
reg   [2:0] i_4_reg_440;
wire    ap_CS_fsm_state73;
reg   [2:0] i_5_reg_451;
reg   [1:0] i_7_reg_460;
wire    ap_CS_fsm_state76;
reg   [0:0] j_3_reg_471;
reg   [2:0] i_8_reg_482;
wire    ap_CS_fsm_state79;
reg   [1:0] i_9_reg_493;
wire    ap_CS_fsm_state82;
reg   [63:0] idx2_2_reg_504;
wire    ap_CS_fsm_state156;
reg   [63:0] idx2_i_reg_517;
reg   [31:0] i_0_in_i_reg_528;
reg   [2:0] j_4_reg_537;
wire    ap_CS_fsm_state155;
reg   [10:0] idx2_3_reg_548;
wire    ap_CS_fsm_state230;
reg   [63:0] idx2_i1_reg_559;
wire   [0:0] exitcond4_fu_875_p2;
reg  signed [1:0] i_16_reg_569;
reg   [1:0] j_5_reg_580;
wire    ap_CS_fsm_state229;
reg    grp_k2c_matmul_fu_591_ap_start_reg;
wire    ap_CS_fsm_state231;
reg    grp_k2c_sub2idx_fu_602_ap_start_reg;
wire   [0:0] tmp_9_fu_627_p2;
wire   [0:0] tmp_fu_664_p2;
wire   [63:0] i_5_cast_fu_720_p1;
wire   [63:0] j_3_cast1_fu_746_p1;
wire   [63:0] extLd_fu_799_p1;
wire   [63:0] extLd1_fu_944_p1;
wire   [63:0] sum_cast_fu_958_p1;
reg   [63:0] count_fu_70;
wire   [63:0] count_2_fu_636_p2;
reg   [63:0] count_1_fu_106;
wire   [63:0] count_3_fu_674_p2;
wire   [63:0] grp_fu_842_p2;
wire   [63:0] grp_fu_914_p2;
wire   [2:0] tmp_22_fu_690_p1;
wire  signed [31:0] i_19_cast_fu_887_p1;
wire   [6:0] grp_fu_914_p1;
wire   [6:0] grp_fu_921_p1;
wire   [11:0] tmp_27_fu_949_p1;
wire   [11:0] sum_fu_953_p2;
reg    grp_fu_685_ap_start;
wire    grp_fu_685_ap_done;
reg    grp_fu_842_ap_start;
wire    grp_fu_842_ap_done;
reg    grp_fu_849_ap_start;
wire    grp_fu_849_ap_done;
reg    grp_fu_914_ap_start;
wire    grp_fu_914_ap_done;
reg    grp_fu_921_ap_start;
wire    grp_fu_921_ap_done;
reg   [230:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 231'd1;
#0 grp_k2c_matmul_fu_591_ap_start_reg = 1'b0;
#0 grp_k2c_sub2idx_fu_602_ap_start_reg = 1'b0;
end

k2c_dot_fc1_kernefYi #(
    .DataWidth( 7 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
fc1_kernel_shape_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fc1_kernel_shape_address0),
    .ce0(fc1_kernel_shape_ce0),
    .q0(fc1_kernel_shape_q0)
);

k2c_dot_permA #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
permA_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(permA_address0),
    .ce0(permA_ce0),
    .we0(permA_we0),
    .d0(permA_d0),
    .q0(permA_q0)
);

k2c_dot_permB #(
    .DataWidth( 2 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
permB_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(permB_address0),
    .ce0(permB_ce0),
    .we0(permB_we0),
    .d0(permB_d0),
    .q0(permB_q0)
);

k2c_dot_permA #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
freeA_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(freeA_address0),
    .ce0(freeA_ce0),
    .we0(freeA_we0),
    .d0(i_reg_416),
    .q0(freeA_q0)
);

k2c_dot_permB #(
    .DataWidth( 2 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
freeB_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(freeB_address0),
    .ce0(freeB_ce0),
    .we0(freeB_we0),
    .d0(i_1_reg_428),
    .q0(freeB_q0)
);

k2c_dot_permA #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
newshpA_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(newshpA_address0),
    .ce0(newshpA_ce0),
    .we0(newshpA_we0),
    .d0(A_shape_q0),
    .q0(newshpA_q0)
);

k2c_dot_permA #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
newshpB_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(newshpB_address0),
    .ce0(newshpB_ce0),
    .we0(newshpB_we0),
    .d0(newshpB_d0),
    .q0(newshpB_q0)
);

k2c_dot_permA #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
Asub_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Asub_address0),
    .ce0(Asub_ce0),
    .we0(Asub_we0),
    .d0(Asub_d0),
    .q0(Asub_q0)
);

k2c_dot_permA #(
    .DataWidth( 64 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
Bsub_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Bsub_address0),
    .ce0(Bsub_ce0),
    .we0(Bsub_we0),
    .d0(Bsub_d0),
    .q0(Bsub_q0)
);

k2c_matmul grp_k2c_matmul_fu_591(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_k2c_matmul_fu_591_ap_start),
    .ap_done(grp_k2c_matmul_fu_591_ap_done),
    .ap_idle(grp_k2c_matmul_fu_591_ap_idle),
    .ap_ready(grp_k2c_matmul_fu_591_ap_ready),
    .C_address0(grp_k2c_matmul_fu_591_C_address0),
    .C_ce0(grp_k2c_matmul_fu_591_C_ce0),
    .C_we0(grp_k2c_matmul_fu_591_C_we0),
    .C_d0(grp_k2c_matmul_fu_591_C_d0),
    .C_q0(C_array_q0),
    .A_address0(grp_k2c_matmul_fu_591_A_address0),
    .A_ce0(grp_k2c_matmul_fu_591_A_ce0),
    .A_q0(fwork_q0),
    .A_address1(grp_k2c_matmul_fu_591_A_address1),
    .A_ce1(grp_k2c_matmul_fu_591_A_ce1),
    .A_q1(fwork_q1),
    .B_offset(A_numel_read),
    .outrows(free_axesA_reg_1037),
    .innerdim(A_shape_load_reg_1031)
);

k2c_sub2idx grp_k2c_sub2idx_fu_602(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_k2c_sub2idx_fu_602_ap_start),
    .ap_done(grp_k2c_sub2idx_fu_602_ap_done),
    .ap_idle(grp_k2c_sub2idx_fu_602_ap_idle),
    .ap_ready(grp_k2c_sub2idx_fu_602_ap_ready),
    .sub_address0(grp_k2c_sub2idx_fu_602_sub_address0),
    .sub_ce0(grp_k2c_sub2idx_fu_602_sub_ce0),
    .sub_q0(grp_k2c_sub2idx_fu_602_sub_q0),
    .shape_address0(grp_k2c_sub2idx_fu_602_shape_address0),
    .shape_ce0(grp_k2c_sub2idx_fu_602_shape_ce0),
    .shape_q0(grp_k2c_sub2idx_fu_602_shape_q0),
    .ndim(grp_k2c_sub2idx_fu_602_ndim),
    .ap_return(grp_k2c_sub2idx_fu_602_ap_return)
);

check_best_model_g8j #(
    .ID( 1 ),
    .NUM_STAGE( 68 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
check_best_model_g8j_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_685_ap_start),
    .done(grp_fu_685_ap_done),
    .din0(A_numel_read),
    .din1(A_shape_q0),
    .ce(1'b1),
    .dout(grp_fu_685_p2)
);

check_best_model_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 68 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
check_best_model_hbi_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_842_ap_start),
    .done(grp_fu_842_ap_done),
    .din0(idx2_i_reg_517),
    .din1(A_shape_q0),
    .ce(1'b1),
    .dout(grp_fu_842_p2)
);

check_best_model_g8j #(
    .ID( 1 ),
    .NUM_STAGE( 68 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
check_best_model_g8j_U19(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_849_ap_start),
    .done(grp_fu_849_ap_done),
    .din0(idx2_i_reg_517),
    .din1(A_shape_q0),
    .ce(1'b1),
    .dout(grp_fu_849_p2)
);

check_best_model_ibs #(
    .ID( 1 ),
    .NUM_STAGE( 68 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 64 ))
check_best_model_ibs_U20(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_914_ap_start),
    .done(grp_fu_914_ap_done),
    .din0(idx2_i1_reg_559),
    .din1(grp_fu_914_p1),
    .ce(1'b1),
    .dout(grp_fu_914_p2)
);

check_best_model_jbC #(
    .ID( 1 ),
    .NUM_STAGE( 68 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 64 ))
check_best_model_jbC_U21(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_921_ap_start),
    .done(grp_fu_921_ap_done),
    .din0(idx2_i1_reg_559),
    .din1(grp_fu_921_p1),
    .ce(1'b1),
    .dout(grp_fu_921_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_k2c_matmul_fu_591_ap_start_reg <= 1'b0;
    end else begin
        if (((exitcond4_fu_875_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state157))) begin
            grp_k2c_matmul_fu_591_ap_start_reg <= 1'b1;
        end else if ((grp_k2c_matmul_fu_591_ap_ready == 1'b1)) begin
            grp_k2c_matmul_fu_591_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_k2c_sub2idx_fu_602_ap_start_reg <= 1'b0;
    end else begin
        if ((((exitcond7_fu_932_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state227)) | ((exitcond8_fu_860_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state153)))) begin
            grp_k2c_sub2idx_fu_602_ap_start_reg <= 1'b1;
        end else if ((grp_k2c_sub2idx_fu_602_ap_ready == 1'b1)) begin
            grp_k2c_sub2idx_fu_602_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_664_p2 == 1'd0) & (exitcond1_fu_652_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        count_1_fu_106 <= count_3_fu_674_p2;
    end else if (((exitcond_fu_616_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        count_1_fu_106 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_9_fu_627_p2 == 1'd0) & (exitcond_fu_616_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        count_fu_70 <= count_2_fu_636_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        count_fu_70 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_809_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state83))) begin
        i_0_in_i_reg_528 <= tmp_23_reg_1142;
    end else if ((1'b1 == ap_CS_fsm_state152)) begin
        i_0_in_i_reg_528 <= i_15_reg_1165;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_fu_875_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state157))) begin
        i_16_reg_569 <= 2'd1;
    end else if ((1'b1 == ap_CS_fsm_state226)) begin
        i_16_reg_569 <= phitmp_reg_1249;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_652_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        i_1_reg_428 <= i_10_fu_658_p2;
    end else if (((exitcond_fu_616_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        i_1_reg_428 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        i_4_reg_440 <= i_6_reg_1060;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        i_4_reg_440 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond6_fu_709_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state72))) begin
        i_5_reg_451 <= i_2_cast_reg_1047;
    end else if (((tmp_s_fu_725_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state74))) begin
        i_5_reg_451 <= i_11_fu_730_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_s_fu_725_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state74))) begin
        i_7_reg_460 <= 2'd1;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        i_7_reg_460 <= i_12_reg_1091;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_fu_740_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state75))) begin
        i_8_reg_482 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        i_8_reg_482 <= i_13_reg_1109;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_fu_768_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state77))) begin
        i_9_reg_493 <= 2'd0;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        i_9_reg_493 <= i_14_reg_1132;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_616_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i_reg_416 <= i_3_fu_621_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_416 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond9_fu_784_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state80))) begin
        idx2_2_reg_504 <= 64'd0;
    end else if (((grp_k2c_sub2idx_fu_602_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state156))) begin
        idx2_2_reg_504 <= i_18_reg_1155;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_809_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state83))) begin
        idx2_3_reg_548 <= 11'd0;
    end else if (((grp_k2c_sub2idx_fu_602_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state230))) begin
        idx2_3_reg_548 <= i_17_reg_1231;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_fu_875_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state157))) begin
        idx2_i1_reg_559 <= idx2_3_cast2_fu_871_p1;
    end else if ((1'b1 == ap_CS_fsm_state226)) begin
        idx2_i1_reg_559 <= grp_fu_921_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_809_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state83))) begin
        idx2_i_reg_517 <= idx2_2_reg_504;
    end else if ((1'b1 == ap_CS_fsm_state152)) begin
        idx2_i_reg_517 <= grp_fu_849_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_s_fu_725_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state74))) begin
        j_3_reg_471 <= 1'd0;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        j_3_reg_471 <= j_reg_1096;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_25_fu_829_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state84))) begin
        j_4_reg_537 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state155)) begin
        j_4_reg_537 <= j_2_reg_1202;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_26_fu_891_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state158))) begin
        j_5_reg_580 <= 2'd0;
    end else if ((1'b1 == ap_CS_fsm_state229)) begin
        j_5_reg_580 <= j_6_reg_1273;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        A_shape_load_reg_1031 <= A_shape_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        free_axesA_reg_1037 <= grp_fu_685_p2;
        i_2_cast_reg_1047 <= i_2_cast_fu_698_p2;
        i_2_reg_1042 <= i_2_fu_693_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_fu_740_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state75))) begin
        i_12_reg_1091 <= i_12_fu_751_p2;
        j_reg_1096 <= j_fu_757_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        i_13_reg_1109 <= i_13_fu_773_p2;
        i_8_cast_reg_1101[2 : 0] <= i_8_cast_fu_763_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        i_14_reg_1132 <= i_14_fu_790_p2;
        i_9_cast3_reg_1124[1 : 0] <= i_9_cast3_fu_779_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        i_15_reg_1165 <= i_15_fu_823_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state157)) begin
        i_17_reg_1231 <= i_17_fu_881_p2;
        idx2_3_cast2_reg_1222[10 : 0] <= idx2_3_cast2_fu_871_p1[10 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state83)) begin
        i_18_reg_1155 <= i_18_fu_814_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        i_4_cast_reg_1052[2 : 0] <= i_4_cast_fu_704_p1[2 : 0];
        i_6_reg_1060 <= i_6_fu_714_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        i_7_cast4_reg_1078[1 : 0] <= i_7_cast4_fu_736_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state153)) begin
        j_2_reg_1202 <= j_2_fu_865_p2;
        j_4_cast_reg_1194[2 : 0] <= j_4_cast_fu_855_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state227)) begin
        j_5_cast1_reg_1265[1 : 0] <= j_5_cast1_fu_927_p1[1 : 0];
        j_6_reg_1273 <= j_6_fu_938_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_26_fu_891_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state158))) begin
        phitmp_reg_1249 <= phitmp_fu_904_p2;
        tmp_7_i5_reg_1239[31 : 0] <= tmp_7_i5_fu_899_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond9_fu_784_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state80))) begin
        tmp_23_reg_1142 <= tmp_23_fu_796_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_809_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state83))) begin
        tmp_24_reg_1160 <= tmp_24_fu_820_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_25_fu_829_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state84))) begin
        tmp_7_i_reg_1173[31 : 0] <= tmp_7_i_fu_837_p1[31 : 0];
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state153)) begin
        A_array_ce0 = 1'b1;
    end else begin
        A_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        A_shape_address0 = tmp_7_i_fu_837_p1;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        A_shape_address0 = permA_q0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        A_shape_address0 = axesA_0_read;
    end else begin
        A_shape_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state3))) begin
        A_shape_ce0 = 1'b1;
    end else begin
        A_shape_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state229)) begin
        Asub_address0 = j_5_cast1_reg_1265;
    end else if ((1'b1 == ap_CS_fsm_state154)) begin
        Asub_address0 = permA_q0;
    end else if ((1'b1 == ap_CS_fsm_state152)) begin
        Asub_address0 = tmp_7_i_reg_1173;
    end else if ((1'b1 == ap_CS_fsm_state230)) begin
        Asub_address0 = grp_k2c_sub2idx_fu_602_sub_address0;
    end else begin
        Asub_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state229) | (1'b1 == ap_CS_fsm_state154) | (1'b1 == ap_CS_fsm_state152))) begin
        Asub_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state230)) begin
        Asub_ce0 = grp_k2c_sub2idx_fu_602_sub_ce0;
    end else begin
        Asub_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state229)) begin
        Asub_d0 = Bsub_q0;
    end else if ((1'b1 == ap_CS_fsm_state152)) begin
        Asub_d0 = grp_fu_842_p2;
    end else begin
        Asub_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state229) | (1'b1 == ap_CS_fsm_state152))) begin
        Asub_we0 = 1'b1;
    end else begin
        Asub_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state227)) begin
        B_array_ce0 = 1'b1;
    end else begin
        B_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state228)) begin
        Bsub_address0 = extLd1_fu_944_p1;
    end else if ((1'b1 == ap_CS_fsm_state226)) begin
        Bsub_address0 = tmp_7_i5_reg_1239;
    end else if ((1'b1 == ap_CS_fsm_state155)) begin
        Bsub_address0 = j_4_cast_reg_1194;
    end else if ((1'b1 == ap_CS_fsm_state156)) begin
        Bsub_address0 = grp_k2c_sub2idx_fu_602_sub_address0;
    end else begin
        Bsub_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state155) | (1'b1 == ap_CS_fsm_state228) | (1'b1 == ap_CS_fsm_state226))) begin
        Bsub_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state156)) begin
        Bsub_ce0 = grp_k2c_sub2idx_fu_602_sub_ce0;
    end else begin
        Bsub_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state226)) begin
        Bsub_d0 = grp_fu_914_p2;
    end else if ((1'b1 == ap_CS_fsm_state155)) begin
        Bsub_d0 = Asub_q0;
    end else begin
        Bsub_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state155) | (1'b1 == ap_CS_fsm_state226))) begin
        Bsub_we0 = 1'b1;
    end else begin
        Bsub_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((grp_k2c_matmul_fu_591_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state231)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_k2c_matmul_fu_591_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state231))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state158)) begin
        fc1_kernel_shape_address0 = tmp_7_i5_fu_899_p1;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        fc1_kernel_shape_address0 = extLd_fu_799_p1;
    end else begin
        fc1_kernel_shape_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state158) | (1'b1 == ap_CS_fsm_state81))) begin
        fc1_kernel_shape_ce0 = 1'b1;
    end else begin
        fc1_kernel_shape_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        freeA_address0 = i_4_cast_fu_704_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        freeA_address0 = count_fu_70;
    end else begin
        freeA_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state2))) begin
        freeA_ce0 = 1'b1;
    end else begin
        freeA_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_9_fu_627_p2 == 1'd0) & (exitcond_fu_616_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        freeA_we0 = 1'b1;
    end else begin
        freeA_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        freeB_address0 = j_3_cast1_fu_746_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        freeB_address0 = count_1_fu_106;
    end else begin
        freeB_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state3))) begin
        freeB_ce0 = 1'b1;
    end else begin
        freeB_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_fu_664_p2 == 1'd0) & (exitcond1_fu_652_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        freeB_we0 = 1'b1;
    end else begin
        freeB_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state230)) begin
        fwork_address0 = sum_cast_fu_958_p1;
    end else if ((1'b1 == ap_CS_fsm_state156)) begin
        fwork_address0 = grp_k2c_sub2idx_fu_602_ap_return;
    end else if ((1'b1 == ap_CS_fsm_state231)) begin
        fwork_address0 = grp_k2c_matmul_fu_591_A_address0;
    end else begin
        fwork_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((grp_k2c_sub2idx_fu_602_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state230)) | ((grp_k2c_sub2idx_fu_602_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state156)))) begin
        fwork_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state231)) begin
        fwork_ce0 = grp_k2c_matmul_fu_591_A_ce0;
    end else begin
        fwork_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state231)) begin
        fwork_ce1 = grp_k2c_matmul_fu_591_A_ce1;
    end else begin
        fwork_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state230)) begin
        fwork_d0 = B_array_q0;
    end else if ((1'b1 == ap_CS_fsm_state156)) begin
        fwork_d0 = A_array_q0;
    end else begin
        fwork_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((grp_k2c_sub2idx_fu_602_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state230)) | ((grp_k2c_sub2idx_fu_602_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state156)))) begin
        fwork_we0 = 1'b1;
    end else begin
        fwork_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_685_ap_start = 1'b1;
    end else begin
        grp_fu_685_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        grp_fu_842_ap_start = 1'b1;
    end else begin
        grp_fu_842_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        grp_fu_849_ap_start = 1'b1;
    end else begin
        grp_fu_849_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state159)) begin
        grp_fu_914_ap_start = 1'b1;
    end else begin
        grp_fu_914_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state159)) begin
        grp_fu_921_ap_start = 1'b1;
    end else begin
        grp_fu_921_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state230)) begin
        grp_k2c_sub2idx_fu_602_ndim = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state156)) begin
        grp_k2c_sub2idx_fu_602_ndim = A_ndim_read;
    end else begin
        grp_k2c_sub2idx_fu_602_ndim = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state230)) begin
        grp_k2c_sub2idx_fu_602_shape_q0 = newshpB_q0;
    end else if ((1'b1 == ap_CS_fsm_state156)) begin
        grp_k2c_sub2idx_fu_602_shape_q0 = newshpA_q0;
    end else begin
        grp_k2c_sub2idx_fu_602_shape_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state230)) begin
        grp_k2c_sub2idx_fu_602_sub_q0 = Asub_q0;
    end else if ((1'b1 == ap_CS_fsm_state156)) begin
        grp_k2c_sub2idx_fu_602_sub_q0 = Bsub_q0;
    end else begin
        grp_k2c_sub2idx_fu_602_sub_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        newshpA_address0 = i_8_cast_reg_1101;
    end else if ((1'b1 == ap_CS_fsm_state156)) begin
        newshpA_address0 = grp_k2c_sub2idx_fu_602_shape_address0;
    end else begin
        newshpA_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        newshpA_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state156)) begin
        newshpA_ce0 = grp_k2c_sub2idx_fu_602_shape_ce0;
    end else begin
        newshpA_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        newshpA_we0 = 1'b1;
    end else begin
        newshpA_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state82)) begin
        newshpB_address0 = i_9_cast3_reg_1124;
    end else if ((1'b1 == ap_CS_fsm_state230)) begin
        newshpB_address0 = grp_k2c_sub2idx_fu_602_shape_address0;
    end else begin
        newshpB_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state82)) begin
        newshpB_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state230)) begin
        newshpB_ce0 = grp_k2c_sub2idx_fu_602_shape_ce0;
    end else begin
        newshpB_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state82)) begin
        newshpB_we0 = 1'b1;
    end else begin
        newshpB_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state153)) begin
        permA_address0 = j_4_cast_fu_855_p1;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        permA_address0 = i_8_cast_fu_763_p1;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        permA_address0 = i_5_cast_fu_720_p1;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        permA_address0 = i_4_cast_reg_1052;
    end else begin
        permA_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state153) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state74))) begin
        permA_ce0 = 1'b1;
    end else begin
        permA_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        permA_d0 = axesA_0_read;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        permA_d0 = freeA_q0;
    end else begin
        permA_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state73) | ((tmp_s_fu_725_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state74)))) begin
        permA_we0 = 1'b1;
    end else begin
        permA_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state227)) begin
        permB_address0 = j_5_cast1_fu_927_p1;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        permB_address0 = i_9_cast3_fu_779_p1;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        permB_address0 = i_7_cast4_reg_1078;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        permB_address0 = 64'd0;
    end else begin
        permB_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state227) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state74))) begin
        permB_ce0 = 1'b1;
    end else begin
        permB_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        permB_d0 = freeB_q0;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        permB_d0 = 2'd0;
    end else begin
        permB_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state76) | ((tmp_s_fu_725_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state74)))) begin
        permB_we0 = 1'b1;
    end else begin
        permB_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond_fu_616_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((exitcond1_fu_652_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            if (((exitcond6_fu_709_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state72))) begin
                ap_NS_fsm = ap_ST_fsm_state74;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state73;
            end
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state74 : begin
            if (((tmp_s_fu_725_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state74))) begin
                ap_NS_fsm = ap_ST_fsm_state75;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state74;
            end
        end
        ap_ST_fsm_state75 : begin
            if (((exitcond5_fu_740_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state75))) begin
                ap_NS_fsm = ap_ST_fsm_state77;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state76;
            end
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state77 : begin
            if (((exitcond2_fu_768_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state77))) begin
                ap_NS_fsm = ap_ST_fsm_state80;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state78;
            end
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state80 : begin
            if (((exitcond9_fu_784_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state80))) begin
                ap_NS_fsm = ap_ST_fsm_state83;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state81;
            end
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state83 : begin
            if (((exitcond3_fu_809_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state83))) begin
                ap_NS_fsm = ap_ST_fsm_state157;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state84;
            end
        end
        ap_ST_fsm_state84 : begin
            if (((tmp_25_fu_829_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state84))) begin
                ap_NS_fsm = ap_ST_fsm_state153;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state85;
            end
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state121;
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            ap_NS_fsm = ap_ST_fsm_state124;
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state125 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state126 : begin
            ap_NS_fsm = ap_ST_fsm_state127;
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state128;
        end
        ap_ST_fsm_state128 : begin
            ap_NS_fsm = ap_ST_fsm_state129;
        end
        ap_ST_fsm_state129 : begin
            ap_NS_fsm = ap_ST_fsm_state130;
        end
        ap_ST_fsm_state130 : begin
            ap_NS_fsm = ap_ST_fsm_state131;
        end
        ap_ST_fsm_state131 : begin
            ap_NS_fsm = ap_ST_fsm_state132;
        end
        ap_ST_fsm_state132 : begin
            ap_NS_fsm = ap_ST_fsm_state133;
        end
        ap_ST_fsm_state133 : begin
            ap_NS_fsm = ap_ST_fsm_state134;
        end
        ap_ST_fsm_state134 : begin
            ap_NS_fsm = ap_ST_fsm_state135;
        end
        ap_ST_fsm_state135 : begin
            ap_NS_fsm = ap_ST_fsm_state136;
        end
        ap_ST_fsm_state136 : begin
            ap_NS_fsm = ap_ST_fsm_state137;
        end
        ap_ST_fsm_state137 : begin
            ap_NS_fsm = ap_ST_fsm_state138;
        end
        ap_ST_fsm_state138 : begin
            ap_NS_fsm = ap_ST_fsm_state139;
        end
        ap_ST_fsm_state139 : begin
            ap_NS_fsm = ap_ST_fsm_state140;
        end
        ap_ST_fsm_state140 : begin
            ap_NS_fsm = ap_ST_fsm_state141;
        end
        ap_ST_fsm_state141 : begin
            ap_NS_fsm = ap_ST_fsm_state142;
        end
        ap_ST_fsm_state142 : begin
            ap_NS_fsm = ap_ST_fsm_state143;
        end
        ap_ST_fsm_state143 : begin
            ap_NS_fsm = ap_ST_fsm_state144;
        end
        ap_ST_fsm_state144 : begin
            ap_NS_fsm = ap_ST_fsm_state145;
        end
        ap_ST_fsm_state145 : begin
            ap_NS_fsm = ap_ST_fsm_state146;
        end
        ap_ST_fsm_state146 : begin
            ap_NS_fsm = ap_ST_fsm_state147;
        end
        ap_ST_fsm_state147 : begin
            ap_NS_fsm = ap_ST_fsm_state148;
        end
        ap_ST_fsm_state148 : begin
            ap_NS_fsm = ap_ST_fsm_state149;
        end
        ap_ST_fsm_state149 : begin
            ap_NS_fsm = ap_ST_fsm_state150;
        end
        ap_ST_fsm_state150 : begin
            ap_NS_fsm = ap_ST_fsm_state151;
        end
        ap_ST_fsm_state151 : begin
            ap_NS_fsm = ap_ST_fsm_state152;
        end
        ap_ST_fsm_state152 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state153 : begin
            if (((exitcond8_fu_860_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state153))) begin
                ap_NS_fsm = ap_ST_fsm_state156;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state154;
            end
        end
        ap_ST_fsm_state154 : begin
            ap_NS_fsm = ap_ST_fsm_state155;
        end
        ap_ST_fsm_state155 : begin
            ap_NS_fsm = ap_ST_fsm_state153;
        end
        ap_ST_fsm_state156 : begin
            if (((grp_k2c_sub2idx_fu_602_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state156))) begin
                ap_NS_fsm = ap_ST_fsm_state83;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state156;
            end
        end
        ap_ST_fsm_state157 : begin
            if (((exitcond4_fu_875_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state157))) begin
                ap_NS_fsm = ap_ST_fsm_state158;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state231;
            end
        end
        ap_ST_fsm_state158 : begin
            if (((tmp_26_fu_891_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state158))) begin
                ap_NS_fsm = ap_ST_fsm_state227;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state159;
            end
        end
        ap_ST_fsm_state159 : begin
            ap_NS_fsm = ap_ST_fsm_state160;
        end
        ap_ST_fsm_state160 : begin
            ap_NS_fsm = ap_ST_fsm_state161;
        end
        ap_ST_fsm_state161 : begin
            ap_NS_fsm = ap_ST_fsm_state162;
        end
        ap_ST_fsm_state162 : begin
            ap_NS_fsm = ap_ST_fsm_state163;
        end
        ap_ST_fsm_state163 : begin
            ap_NS_fsm = ap_ST_fsm_state164;
        end
        ap_ST_fsm_state164 : begin
            ap_NS_fsm = ap_ST_fsm_state165;
        end
        ap_ST_fsm_state165 : begin
            ap_NS_fsm = ap_ST_fsm_state166;
        end
        ap_ST_fsm_state166 : begin
            ap_NS_fsm = ap_ST_fsm_state167;
        end
        ap_ST_fsm_state167 : begin
            ap_NS_fsm = ap_ST_fsm_state168;
        end
        ap_ST_fsm_state168 : begin
            ap_NS_fsm = ap_ST_fsm_state169;
        end
        ap_ST_fsm_state169 : begin
            ap_NS_fsm = ap_ST_fsm_state170;
        end
        ap_ST_fsm_state170 : begin
            ap_NS_fsm = ap_ST_fsm_state171;
        end
        ap_ST_fsm_state171 : begin
            ap_NS_fsm = ap_ST_fsm_state172;
        end
        ap_ST_fsm_state172 : begin
            ap_NS_fsm = ap_ST_fsm_state173;
        end
        ap_ST_fsm_state173 : begin
            ap_NS_fsm = ap_ST_fsm_state174;
        end
        ap_ST_fsm_state174 : begin
            ap_NS_fsm = ap_ST_fsm_state175;
        end
        ap_ST_fsm_state175 : begin
            ap_NS_fsm = ap_ST_fsm_state176;
        end
        ap_ST_fsm_state176 : begin
            ap_NS_fsm = ap_ST_fsm_state177;
        end
        ap_ST_fsm_state177 : begin
            ap_NS_fsm = ap_ST_fsm_state178;
        end
        ap_ST_fsm_state178 : begin
            ap_NS_fsm = ap_ST_fsm_state179;
        end
        ap_ST_fsm_state179 : begin
            ap_NS_fsm = ap_ST_fsm_state180;
        end
        ap_ST_fsm_state180 : begin
            ap_NS_fsm = ap_ST_fsm_state181;
        end
        ap_ST_fsm_state181 : begin
            ap_NS_fsm = ap_ST_fsm_state182;
        end
        ap_ST_fsm_state182 : begin
            ap_NS_fsm = ap_ST_fsm_state183;
        end
        ap_ST_fsm_state183 : begin
            ap_NS_fsm = ap_ST_fsm_state184;
        end
        ap_ST_fsm_state184 : begin
            ap_NS_fsm = ap_ST_fsm_state185;
        end
        ap_ST_fsm_state185 : begin
            ap_NS_fsm = ap_ST_fsm_state186;
        end
        ap_ST_fsm_state186 : begin
            ap_NS_fsm = ap_ST_fsm_state187;
        end
        ap_ST_fsm_state187 : begin
            ap_NS_fsm = ap_ST_fsm_state188;
        end
        ap_ST_fsm_state188 : begin
            ap_NS_fsm = ap_ST_fsm_state189;
        end
        ap_ST_fsm_state189 : begin
            ap_NS_fsm = ap_ST_fsm_state190;
        end
        ap_ST_fsm_state190 : begin
            ap_NS_fsm = ap_ST_fsm_state191;
        end
        ap_ST_fsm_state191 : begin
            ap_NS_fsm = ap_ST_fsm_state192;
        end
        ap_ST_fsm_state192 : begin
            ap_NS_fsm = ap_ST_fsm_state193;
        end
        ap_ST_fsm_state193 : begin
            ap_NS_fsm = ap_ST_fsm_state194;
        end
        ap_ST_fsm_state194 : begin
            ap_NS_fsm = ap_ST_fsm_state195;
        end
        ap_ST_fsm_state195 : begin
            ap_NS_fsm = ap_ST_fsm_state196;
        end
        ap_ST_fsm_state196 : begin
            ap_NS_fsm = ap_ST_fsm_state197;
        end
        ap_ST_fsm_state197 : begin
            ap_NS_fsm = ap_ST_fsm_state198;
        end
        ap_ST_fsm_state198 : begin
            ap_NS_fsm = ap_ST_fsm_state199;
        end
        ap_ST_fsm_state199 : begin
            ap_NS_fsm = ap_ST_fsm_state200;
        end
        ap_ST_fsm_state200 : begin
            ap_NS_fsm = ap_ST_fsm_state201;
        end
        ap_ST_fsm_state201 : begin
            ap_NS_fsm = ap_ST_fsm_state202;
        end
        ap_ST_fsm_state202 : begin
            ap_NS_fsm = ap_ST_fsm_state203;
        end
        ap_ST_fsm_state203 : begin
            ap_NS_fsm = ap_ST_fsm_state204;
        end
        ap_ST_fsm_state204 : begin
            ap_NS_fsm = ap_ST_fsm_state205;
        end
        ap_ST_fsm_state205 : begin
            ap_NS_fsm = ap_ST_fsm_state206;
        end
        ap_ST_fsm_state206 : begin
            ap_NS_fsm = ap_ST_fsm_state207;
        end
        ap_ST_fsm_state207 : begin
            ap_NS_fsm = ap_ST_fsm_state208;
        end
        ap_ST_fsm_state208 : begin
            ap_NS_fsm = ap_ST_fsm_state209;
        end
        ap_ST_fsm_state209 : begin
            ap_NS_fsm = ap_ST_fsm_state210;
        end
        ap_ST_fsm_state210 : begin
            ap_NS_fsm = ap_ST_fsm_state211;
        end
        ap_ST_fsm_state211 : begin
            ap_NS_fsm = ap_ST_fsm_state212;
        end
        ap_ST_fsm_state212 : begin
            ap_NS_fsm = ap_ST_fsm_state213;
        end
        ap_ST_fsm_state213 : begin
            ap_NS_fsm = ap_ST_fsm_state214;
        end
        ap_ST_fsm_state214 : begin
            ap_NS_fsm = ap_ST_fsm_state215;
        end
        ap_ST_fsm_state215 : begin
            ap_NS_fsm = ap_ST_fsm_state216;
        end
        ap_ST_fsm_state216 : begin
            ap_NS_fsm = ap_ST_fsm_state217;
        end
        ap_ST_fsm_state217 : begin
            ap_NS_fsm = ap_ST_fsm_state218;
        end
        ap_ST_fsm_state218 : begin
            ap_NS_fsm = ap_ST_fsm_state219;
        end
        ap_ST_fsm_state219 : begin
            ap_NS_fsm = ap_ST_fsm_state220;
        end
        ap_ST_fsm_state220 : begin
            ap_NS_fsm = ap_ST_fsm_state221;
        end
        ap_ST_fsm_state221 : begin
            ap_NS_fsm = ap_ST_fsm_state222;
        end
        ap_ST_fsm_state222 : begin
            ap_NS_fsm = ap_ST_fsm_state223;
        end
        ap_ST_fsm_state223 : begin
            ap_NS_fsm = ap_ST_fsm_state224;
        end
        ap_ST_fsm_state224 : begin
            ap_NS_fsm = ap_ST_fsm_state225;
        end
        ap_ST_fsm_state225 : begin
            ap_NS_fsm = ap_ST_fsm_state226;
        end
        ap_ST_fsm_state226 : begin
            ap_NS_fsm = ap_ST_fsm_state158;
        end
        ap_ST_fsm_state227 : begin
            if (((exitcond7_fu_932_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state227))) begin
                ap_NS_fsm = ap_ST_fsm_state230;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state228;
            end
        end
        ap_ST_fsm_state228 : begin
            ap_NS_fsm = ap_ST_fsm_state229;
        end
        ap_ST_fsm_state229 : begin
            ap_NS_fsm = ap_ST_fsm_state227;
        end
        ap_ST_fsm_state230 : begin
            if (((grp_k2c_sub2idx_fu_602_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state230))) begin
                ap_NS_fsm = ap_ST_fsm_state157;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state230;
            end
        end
        ap_ST_fsm_state231 : begin
            if (((grp_k2c_matmul_fu_591_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state231))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state231;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A_array_address0 = idx2_2_reg_504;

assign B_array_address0 = idx2_3_cast2_reg_1222;

assign B_shape_load_2_cast_fu_910_p1 = fc1_kernel_shape_q0;

assign C_array_address0 = grp_k2c_matmul_fu_591_C_address0;

assign C_array_ce0 = grp_k2c_matmul_fu_591_C_ce0;

assign C_array_d0 = grp_k2c_matmul_fu_591_C_d0;

assign C_array_we0 = grp_k2c_matmul_fu_591_C_we0;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state152 = ap_CS_fsm[32'd151];

assign ap_CS_fsm_state153 = ap_CS_fsm[32'd152];

assign ap_CS_fsm_state154 = ap_CS_fsm[32'd153];

assign ap_CS_fsm_state155 = ap_CS_fsm[32'd154];

assign ap_CS_fsm_state156 = ap_CS_fsm[32'd155];

assign ap_CS_fsm_state157 = ap_CS_fsm[32'd156];

assign ap_CS_fsm_state158 = ap_CS_fsm[32'd157];

assign ap_CS_fsm_state159 = ap_CS_fsm[32'd158];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state226 = ap_CS_fsm[32'd225];

assign ap_CS_fsm_state227 = ap_CS_fsm[32'd226];

assign ap_CS_fsm_state228 = ap_CS_fsm[32'd227];

assign ap_CS_fsm_state229 = ap_CS_fsm[32'd228];

assign ap_CS_fsm_state230 = ap_CS_fsm[32'd229];

assign ap_CS_fsm_state231 = ap_CS_fsm[32'd230];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd84];

assign count_2_fu_636_p2 = (count_fu_70 + 64'd1);

assign count_3_fu_674_p2 = (count_1_fu_106 + 64'd1);

assign exitcond1_fu_652_p2 = ((i_1_reg_428 == 2'd2) ? 1'b1 : 1'b0);

assign exitcond2_fu_768_p2 = ((i_8_cast_fu_763_p1 == A_ndim_read) ? 1'b1 : 1'b0);

assign exitcond3_fu_809_p2 = ((idx2_2_reg_504 == A_numel_read) ? 1'b1 : 1'b0);

assign exitcond4_fu_875_p2 = ((idx2_3_reg_548 == 11'd1024) ? 1'b1 : 1'b0);

assign exitcond5_fu_740_p2 = ((i_7_reg_460 == 2'd2) ? 1'b1 : 1'b0);

assign exitcond6_fu_709_p2 = ((i_4_cast_fu_704_p1 == i_2_reg_1042) ? 1'b1 : 1'b0);

assign exitcond7_fu_932_p2 = ((j_5_reg_580 == 2'd2) ? 1'b1 : 1'b0);

assign exitcond8_fu_860_p2 = ((j_4_cast_fu_855_p1 == A_ndim_read) ? 1'b1 : 1'b0);

assign exitcond9_fu_784_p2 = ((i_9_reg_493 == 2'd2) ? 1'b1 : 1'b0);

assign exitcond_fu_616_p2 = ((i_reg_416 == A_ndim_read) ? 1'b1 : 1'b0);

assign extLd1_fu_944_p1 = permB_q0;

assign extLd_fu_799_p1 = permB_q0;

assign fwork_address1 = grp_k2c_matmul_fu_591_A_address1;

assign grp_fu_914_p1 = B_shape_load_2_cast_fu_910_p1;

assign grp_fu_921_p1 = B_shape_load_2_cast_fu_910_p1;

assign grp_k2c_matmul_fu_591_ap_start = grp_k2c_matmul_fu_591_ap_start_reg;

assign grp_k2c_sub2idx_fu_602_ap_start = grp_k2c_sub2idx_fu_602_ap_start_reg;

assign i_10_fu_658_p2 = (i_1_reg_428 + 2'd1);

assign i_11_fu_730_p2 = (i_5_reg_451 + 3'd1);

assign i_12_fu_751_p2 = (i_7_reg_460 + 2'd1);

assign i_13_fu_773_p2 = (i_8_reg_482 + 3'd1);

assign i_14_fu_790_p2 = (i_9_reg_493 + 2'd1);

assign i_15_fu_823_p2 = ($signed(i_0_in_i_reg_528) + $signed(32'd4294967295));

assign i_17_fu_881_p2 = (idx2_3_reg_548 + 11'd1);

assign i_18_fu_814_p2 = (idx2_2_reg_504 + 64'd1);

assign i_19_cast_fu_887_p1 = i_16_reg_569;

assign i_2_cast_fu_698_p2 = ($signed(3'd7) + $signed(tmp_22_fu_690_p1));

assign i_2_fu_693_p2 = ($signed(64'd18446744073709551615) + $signed(A_ndim_read));

assign i_3_fu_621_p2 = (i_reg_416 + 64'd1);

assign i_4_cast_fu_704_p1 = i_4_reg_440;

assign i_5_cast_fu_720_p1 = i_5_reg_451;

assign i_6_fu_714_p2 = (i_4_reg_440 + 3'd1);

assign i_7_cast4_fu_736_p1 = i_7_reg_460;

assign i_8_cast_fu_763_p1 = i_8_reg_482;

assign i_9_cast3_fu_779_p1 = i_9_reg_493;

assign idx2_3_cast2_fu_871_p1 = idx2_3_reg_548;

assign j_2_fu_865_p2 = (j_4_reg_537 + 3'd1);

assign j_3_cast1_fu_746_p1 = j_3_reg_471;

assign j_4_cast_fu_855_p1 = j_4_reg_537;

assign j_5_cast1_fu_927_p1 = j_5_reg_580;

assign j_6_fu_938_p2 = (j_5_reg_580 + 2'd1);

assign j_fu_757_p2 = (j_3_reg_471 ^ 1'd1);

assign newshpB_d0 = fc1_kernel_shape_q0;

assign phitmp_fu_904_p2 = ($signed(i_16_reg_569) + $signed(2'd3));

assign sum_cast_fu_958_p1 = sum_fu_953_p2;

assign sum_fu_953_p2 = (tmp_27_fu_949_p1 + tmp_24_reg_1160);

assign tmp_22_fu_690_p1 = A_ndim_read[2:0];

assign tmp_23_fu_796_p1 = A_ndim_read[31:0];

assign tmp_24_fu_820_p1 = A_numel_read[11:0];

assign tmp_25_fu_829_p3 = i_15_fu_823_p2[32'd31];

assign tmp_26_fu_891_p3 = i_16_reg_569[32'd1];

assign tmp_27_fu_949_p1 = grp_k2c_sub2idx_fu_602_ap_return[11:0];

assign tmp_7_i5_fu_899_p1 = $unsigned(i_19_cast_fu_887_p1);

assign tmp_7_i_fu_837_p1 = i_15_fu_823_p2;

assign tmp_9_fu_627_p2 = ((i_reg_416 == axesA_0_read) ? 1'b1 : 1'b0);

assign tmp_fu_664_p2 = ((i_1_reg_428 == 2'd0) ? 1'b1 : 1'b0);

assign tmp_s_fu_725_p2 = ((i_5_cast_fu_720_p1 < A_ndim_read) ? 1'b1 : 1'b0);

always @ (posedge ap_clk) begin
    i_4_cast_reg_1052[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_7_cast4_reg_1078[63:2] <= 62'b00000000000000000000000000000000000000000000000000000000000000;
    i_8_cast_reg_1101[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    i_9_cast3_reg_1124[63:2] <= 62'b00000000000000000000000000000000000000000000000000000000000000;
    tmp_7_i_reg_1173[63:32] <= 32'b00000000000000000000000000000000;
    j_4_cast_reg_1194[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    idx2_3_cast2_reg_1222[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    tmp_7_i5_reg_1239[63:32] <= 32'b00000000000000000000000000000000;
    j_5_cast1_reg_1265[63:2] <= 62'b00000000000000000000000000000000000000000000000000000000000000;
end

endmodule //k2c_dot
